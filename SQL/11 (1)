namespace VAPARS.Controllers
{ 
    public class FilterController : Controller
    {
       // [LogAction]
       // public ActionResult Index() => View();
        //need method/logic
        public class LogActionFilterAttribute : ActionFilterAttribute
        {
            private readonly ILogger logger;
            /// <summary>  
            /// Initializes a new instance of the <see cref="LogActionFilterAttribute" /> class.  
            /// </summary>  
            ///   
           
            
            public override void OnResultExecuting(LogActionFilterAttribute logger)
            {
                if (!(filterContext is null))
                {
                    this.logger = RequestContext.RouteData.Values["RequestId"];
                    var companyId = filterContext.RequestContext.RouteData.Values["CompanyId"];
                    var contractnumber = filterContext.RequestContext.RouteData.Values["ContractNumber"];
                    var startdate = filterContext.RequestContext.RouteData.Values["StartDate"];
                    var terminationdate = filterContext.RequestContext.RouteData.Values["TerminationDate"];
                    var indate = filterContext.RequestContext.RouteData.Values["InDate"];
                    var moddate = filterContext.RequestContext.RouteData.Values["ModDate"];
                    //
                    // Perform logging here
                    //

                    base.OnResultExecuted(filterContext);
                }
                else
                {
                    throw new ArgumentNullException(nameof(filterContext));
                }
            }
        }
    }
}
